{"version":3,"sources":["component/Statistics/Statistics.jsx","component/FeedbackOptions/FeedbackOptions.jsx","component/Sections/Section.jsx","component/Notification/Notification.jsx","component/App.jsx","reportWebVitals.js","index.js","component/Sections/Section.module.css","component/FeedbackOptions/FeedBack.module.css","component/Notification/Notification.module.css"],"names":["Statistics","good","neutral","bad","total","positivePercentage","FeedbackOptions","options","onLeaveFeedback","className","style","containerButton","map","option","button","type","onClick","shortid","generate","Section","title","children","section","container","Notification","message","notificationContainer","App","useState","goodFeedback","setGood","neutralFeedback","setNeutral","badFeedback","setBad","countTotalFeedback","prevState","Math","round","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"+OAyBeA,EAtBI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACE,mCACE,gCACE,uCAAUJ,KACV,0CAAaC,KACb,sCAASC,KACT,wCAAWC,KACX,oDAAuBC,EAAvB,c,gCCWOC,EAlBS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAClC,OACE,qBAAKC,UAAWC,IAAMC,gBAAtB,SACGJ,EAAQK,KAAI,SAACC,GAAD,OACX,wBACEJ,UAAWC,IAAMI,OAEjBC,KAAK,SACL,gBAAeF,EACfG,QAAS,kBAAMR,EAAgBK,IALjC,SAOGA,GALII,IAAQC,kB,gBCURC,EAhBC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,mCACE,qBAAKZ,UAAWC,IAAMY,QAAtB,SACE,sBAAKb,UAAWC,IAAMa,UAAtB,UACE,oBAAId,UAAWC,IAAMU,MAArB,SAA6BA,IAC5BC,U,gBCMIG,EAZM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OACE,mCACE,qBAAKhB,UAAWC,IAAMgB,sBAAtB,SACE,mBAAGjB,UAAWC,IAAMU,MAApB,SAA4BK,SCF9BlB,EAAU,CAAC,OAAQ,MAAO,WAEjB,SAASoB,IAMtB,MAAgCC,mBAAS,GAAzC,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAAsCF,mBAAS,GAA/C,mBAAOG,EAAP,KAAwBC,EAAxB,KACA,EAA8BJ,mBAAS,GAAvC,mBAAOK,EAAP,KAAoBC,EAApB,KAEMC,EAAqB,WAGzB,OAAON,EAAeE,EAAkBE,GA4B1C,OACE,qCACE,cAAC,EAAD,CAASb,MAAM,wBAAf,SACE,cAAC,EAAD,CAAiBb,QAASA,EAASC,gBApBjB,SAACK,GACvB,OAAQA,GACN,IAAK,OACHiB,GAAQ,SAACM,GAAD,OAAeA,EAAY,KACnC,MACF,IAAK,UACHJ,GAAW,SAACI,GAAD,OAAeA,EAAY,KACtC,MACF,IAAK,MACHF,GAAO,SAACE,GAAD,OAAeA,EAAY,KAClC,MACF,QACE,aAWwB,IAAzBD,IACC,cAAC,EAAD,CAAcV,QAAQ,sBAEtB,cAAC,EAAD,CAASL,MAAM,aAAf,SACE,cAAC,EAAD,CACEnB,KAAM4B,EACN3B,QAAS6B,EACT5B,IAAK8B,EAEL7B,MAAO+B,IACP9B,mBApCDgC,KAAKC,MAAOT,EAAeM,IAAwB,YC7B9D,IAYeI,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACvB,EAAD,MAEFwB,SAASC,eAAe,SAM1Bb,K,kBCfAc,EAAOC,QAAU,CAAC,MAAQ,uBAAuB,QAAU,yBAAyB,UAAY,6B,kBCAhGD,EAAOC,QAAU,CAAC,OAAS,yBAAyB,gBAAkB,oC,kBCAtED,EAAOC,QAAU,CAAC,sBAAwB,4CAA4C,MAAQ,+B","file":"static/js/main.5ca97000.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\n  return (\n    <>\n      <div>\n        <p>Good: {good}</p>\n        <p>Neutral: {neutral}</p>\n        <p>Bad: {bad}</p>\n        <p>Total: {total}</p>\n        <p>Positive feedback: {positivePercentage} %</p>\n      </div>\n    </>\n  );\n};\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};\n\nexport default Statistics;\n","import React from \"react\";\nimport shortid from \"shortid\";\nimport style from \"./FeedBack.module.css\";\n\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\n  return (\n    <div className={style.containerButton}>\n      {options.map((option) => (\n        <button\n          className={style.button}\n          key={shortid.generate()}\n          type=\"button\"\n          data-feedback={option}\n          onClick={() => onLeaveFeedback(option)}\n        >\n          {option}\n        </button>\n      ))}\n    </div>\n  );\n};\n\nexport default FeedbackOptions;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport style from \"./Section.module.css\";\n\nconst Section = ({ title, children }) => {\n  return (\n    <>\n      <div className={style.section}>\n        <div className={style.container}>\n          <h2 className={style.title}>{title}</h2>\n          {children}\n        </div>\n      </div>\n    </>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n};\nexport default Section;\n// className={style.}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport style from \"./Notification.module.css\";\n\nconst Notification = ({ message }) => {\n  return (\n    <>\n      <div className={style.notificationContainer}>\n        <p className={style.title}>{message}</p>\n      </div>\n    </>\n  );\n};\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\nexport default Notification;\n","import React, { useState } from \"react\";\nimport Statistics from \"./Statistics/Statistics\";\nimport FeedbackOptions from \"./FeedbackOptions/FeedbackOptions\";\nimport Section from \"./Sections/Section\";\nimport Notification from \"./Notification/Notification\";\n\nconst options = [\"good\", \"bad\", \"neutral\"];\n\nexport default function App() {\n  // state = {\n  //   good: 0,\n  //   neutral: 0,\n  //   bad: 0,\n  // };\n  const [goodFeedback, setGood] = useState(0);\n  const [neutralFeedback, setNeutral] = useState(0);\n  const [badFeedback, setBad] = useState(0);\n\n  const countTotalFeedback = () => {\n    // const { good, neutral, bad } = this.state;\n    // const result = good + neutral + bad;\n    return goodFeedback + neutralFeedback + badFeedback;\n  };\n\n  const countPositiveFeedbackPercentage = () => {\n    // const result = this.countTotalFeedback();\n    // const { good } = this.state;\n    // const percentage = (good * 100) / result;\n    // return Math.round(percentage);\n    return Math.round((goodFeedback / countTotalFeedback()) * 100);\n  };\n\n  const onLeaveFeedback = (option) => {\n    switch (option) {\n      case \"good\":\n        setGood((prevState) => prevState + 1);\n        break;\n      case \"neutral\":\n        setNeutral((prevState) => prevState + 1);\n        break;\n      case \"bad\":\n        setBad((prevState) => prevState + 1);\n        break;\n      default:\n        return;\n    }\n  };\n\n  // const objKey = Object.keys(this.state);\n  return (\n    <>\n      <Section title=\"Please leave feedback\">\n        <FeedbackOptions options={options} onLeaveFeedback={onLeaveFeedback} />\n      </Section>\n\n      {countTotalFeedback() === 0 ? (\n        <Notification message=\"No feedback given\" />\n      ) : (\n        <Section title=\"Statistics\">\n          <Statistics\n            good={goodFeedback}\n            neutral={neutralFeedback}\n            bad={badFeedback}\n            // options={[ goodFeedback, neutralFeedback, badFeedback ] }\n            total={countTotalFeedback()}\n            positivePercentage={countPositiveFeedbackPercentage()}\n          />\n        </Section>\n      )}\n    </>\n  );\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"../src/component/App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Section_title__1hUJE\",\"section\":\"Section_section__2IK0j\",\"container\":\"Section_container__1lchj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"FeedBack_button__21tj9\",\"containerButton\":\"FeedBack_containerButton__1Q671\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notificationContainer\":\"Notification_notificationContainer__73Kuc\",\"title\":\"Notification_title__OxXca\"};"],"sourceRoot":""}